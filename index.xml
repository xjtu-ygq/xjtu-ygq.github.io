<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yin Guangqi</title>
    <link>https://xjtu-ygq.github.io/</link>
    <description>Recent content on Yin Guangqi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://xjtu-ygq.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://xjtu-ygq.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xjtu-ygq.github.io/about/</guid>
      <description>LeetCode 基础数据结构 二分搜索速记卡 704.二分查找 public int search(int[] nums, int target) { int left=0,right=nums.length-1; while(left&amp;lt;=right){ int mid=left+(right-left)/2; if(nums[mid]&amp;gt;target) right=mid-1; else if(nums[mid]&amp;lt;target) left=mid+1; else { return mid; } } return -1; } 34.在排序数组中查找元素的第一个和最后一个位置 public int leftfun(int[] nums, int target){ int left=0,right=nums.length-1; while (left&amp;lt;=right){ int mid=left+(right-left)/2; if(nums[mid]&amp;gt;=target) right=mid-1; else if(nums[mid]&amp;lt;target) left=mid+1; } if(left&amp;gt;=nums.length||nums[left]!=target) return -1; return left; } public int rightfun(int[] nums, int target){ int left=0,right=nums.length-1; while (left&amp;lt;=right){ int mid=left+(right-left)/2; if(nums[mid]&amp;gt;target) right=mid-1; else if(nums[mid]&amp;lt;=target) left=mid+1; } if(right&amp;lt;0||nums[right]!=target) return -1; return right; } public int[] searchRange(int[] nums, int target) { int x=leftfun(nums,target); int y=rightfun(nums,target); if(x&amp;gt;=0&amp;amp;&amp;amp;x&amp;lt;nums.length) return new int[]{x,y}; return new int[]{-1,-1}; } 35.搜索插入位置 public int searchInsert(int[] nums, int target) { int left=0,right=nums.</description>
    </item>
    
  </channel>
</rss>
